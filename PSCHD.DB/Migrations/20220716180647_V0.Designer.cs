// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSCHD.DB;

#nullable disable

namespace PSCHD.DB.Migrations
{
    [DbContext(typeof(PSCHD_Context))]
    [Migration("20220716180647_V0")]
    partial class V0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("PSCHD.Model.AppSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("PSCHD.Model.ArtistId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("artistId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MagicCardId");

                    b.ToTable("ArtistIDs");
                });

            modelBuilder.Entity("PSCHD.Model.Finish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("finish")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MagicCardId");

                    b.ToTable("Finishes");
                });

            modelBuilder.Entity("PSCHD.Model.ImageUris", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageSize")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URI")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ImageUris");
                });

            modelBuilder.Entity("PSCHD.Model.Legalities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("alchemy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("brawl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("commander")
                        .HasColumnType("INTEGER");

                    b.Property<int>("duel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("future")
                        .HasColumnType("INTEGER");

                    b.Property<int>("gladiator")
                        .HasColumnType("INTEGER");

                    b.Property<int>("historic")
                        .HasColumnType("INTEGER");

                    b.Property<int>("historicbrawl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("legacy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("modern")
                        .HasColumnType("INTEGER");

                    b.Property<int>("oldschool")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pauper")
                        .HasColumnType("INTEGER");

                    b.Property<int>("paupercommander")
                        .HasColumnType("INTEGER");

                    b.Property<int>("penny")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pioneer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("premodern")
                        .HasColumnType("INTEGER");

                    b.Property<int>("standard")
                        .HasColumnType("INTEGER");

                    b.Property<int>("vintage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Leglities");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cardset")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cardset_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cardset_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cardset_search_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cardset_type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cardset_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("_object")
                        .HasColumnType("TEXT");

                    b.Property<string>("artist")
                        .HasColumnType("TEXT");

                    b.Property<bool>("booster")
                        .HasColumnType("INTEGER");

                    b.Property<string>("border_color")
                        .HasColumnType("TEXT");

                    b.Property<string>("card_back_id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("cardmarket_id")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("cmc")
                        .HasColumnType("REAL");

                    b.Property<string>("collector_number")
                        .HasColumnType("TEXT");

                    b.Property<bool>("digital")
                        .HasColumnType("INTEGER");

                    b.Property<int>("edhrec_rank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("flavor_text")
                        .HasColumnType("TEXT");

                    b.Property<bool>("foil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("frame")
                        .HasColumnType("TEXT");

                    b.Property<bool>("full_art")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("highres_image")
                        .HasColumnType("INTEGER");

                    b.Property<string>("illustration_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("image_status")
                        .HasColumnType("TEXT");

                    b.Property<string>("lang")
                        .HasColumnType("TEXT");

                    b.Property<string>("layout")
                        .HasColumnType("TEXT");

                    b.Property<int?>("legalitiesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("mana_cost")
                        .HasColumnType("TEXT");

                    b.Property<int?>("mtgo_foil_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("mtgo_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("nonfoil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("oracle_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("oracle_text")
                        .HasColumnType("TEXT");

                    b.Property<bool>("oversized")
                        .HasColumnType("INTEGER");

                    b.Property<string>("power")
                        .HasColumnType("TEXT");

                    b.Property<string>("prints_search_uri")
                        .HasColumnType("TEXT");

                    b.Property<bool>("promo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("rarity")
                        .HasColumnType("TEXT");

                    b.Property<string>("released_at")
                        .HasColumnType("TEXT");

                    b.Property<bool>("reprint")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("reserved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("rulings_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("scryfall_set_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("scryfall_uri")
                        .HasColumnType("TEXT");

                    b.Property<bool>("story_spotlight")
                        .HasColumnType("INTEGER");

                    b.Property<string>("string_id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("tcgplayer_id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("textless")
                        .HasColumnType("INTEGER");

                    b.Property<string>("toughness")
                        .HasColumnType("TEXT");

                    b.Property<string>("type_line")
                        .HasColumnType("TEXT");

                    b.Property<string>("uri")
                        .HasColumnType("TEXT");

                    b.Property<bool>("variation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("legalitiesId");

                    b.ToTable("MagiCards");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCardColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ColorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("MagicCardId");

                    b.ToTable("MagicCardColors");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCardColorIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicColorIdentityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MagicCardId");

                    b.HasIndex("MagicColorIdentityId");

                    b.ToTable("MagicCardColorIdentities");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCardGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicGameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MagicCardId");

                    b.HasIndex("MagicGameId");

                    b.ToTable("MagicCardGames");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCardKeyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("keywordId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MagicCardId");

                    b.HasIndex("keywordId");

                    b.ToTable("MagicCardKeyword");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MagicCollections");
                });

            modelBuilder.Entity("PSCHD.Model.MagicColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<char>("magicColor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            magicColor = 'A'
                        },
                        new
                        {
                            Id = 2,
                            magicColor = 'B'
                        },
                        new
                        {
                            Id = 3,
                            magicColor = 'C'
                        },
                        new
                        {
                            Id = 4,
                            magicColor = 'D'
                        },
                        new
                        {
                            Id = 5,
                            magicColor = 'E'
                        },
                        new
                        {
                            Id = 6,
                            magicColor = 'F'
                        },
                        new
                        {
                            Id = 7,
                            magicColor = 'G'
                        },
                        new
                        {
                            Id = 8,
                            magicColor = 'H'
                        },
                        new
                        {
                            Id = 9,
                            magicColor = 'I'
                        },
                        new
                        {
                            Id = 10,
                            magicColor = 'J'
                        },
                        new
                        {
                            Id = 11,
                            magicColor = 'K'
                        },
                        new
                        {
                            Id = 12,
                            magicColor = 'L'
                        },
                        new
                        {
                            Id = 13,
                            magicColor = 'M'
                        },
                        new
                        {
                            Id = 14,
                            magicColor = 'N'
                        },
                        new
                        {
                            Id = 15,
                            magicColor = 'O'
                        },
                        new
                        {
                            Id = 16,
                            magicColor = 'P'
                        },
                        new
                        {
                            Id = 17,
                            magicColor = 'Q'
                        },
                        new
                        {
                            Id = 18,
                            magicColor = 'R'
                        },
                        new
                        {
                            Id = 19,
                            magicColor = 'S'
                        },
                        new
                        {
                            Id = 20,
                            magicColor = 'T'
                        },
                        new
                        {
                            Id = 21,
                            magicColor = 'U'
                        },
                        new
                        {
                            Id = 22,
                            magicColor = 'V'
                        },
                        new
                        {
                            Id = 23,
                            magicColor = 'W'
                        },
                        new
                        {
                            Id = 24,
                            magicColor = 'X'
                        },
                        new
                        {
                            Id = 25,
                            magicColor = 'Y'
                        },
                        new
                        {
                            Id = 26,
                            magicColor = 'Z'
                        });
                });

            modelBuilder.Entity("PSCHD.Model.MagicColorIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<char>("magicColorIdentity")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colors_Identity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            magicColorIdentity = 'A'
                        },
                        new
                        {
                            Id = 2,
                            magicColorIdentity = 'B'
                        },
                        new
                        {
                            Id = 3,
                            magicColorIdentity = 'C'
                        },
                        new
                        {
                            Id = 4,
                            magicColorIdentity = 'D'
                        },
                        new
                        {
                            Id = 5,
                            magicColorIdentity = 'E'
                        },
                        new
                        {
                            Id = 6,
                            magicColorIdentity = 'F'
                        },
                        new
                        {
                            Id = 7,
                            magicColorIdentity = 'G'
                        },
                        new
                        {
                            Id = 8,
                            magicColorIdentity = 'H'
                        },
                        new
                        {
                            Id = 9,
                            magicColorIdentity = 'I'
                        },
                        new
                        {
                            Id = 10,
                            magicColorIdentity = 'J'
                        },
                        new
                        {
                            Id = 11,
                            magicColorIdentity = 'K'
                        },
                        new
                        {
                            Id = 12,
                            magicColorIdentity = 'L'
                        },
                        new
                        {
                            Id = 13,
                            magicColorIdentity = 'M'
                        },
                        new
                        {
                            Id = 14,
                            magicColorIdentity = 'N'
                        },
                        new
                        {
                            Id = 15,
                            magicColorIdentity = 'O'
                        },
                        new
                        {
                            Id = 16,
                            magicColorIdentity = 'P'
                        },
                        new
                        {
                            Id = 17,
                            magicColorIdentity = 'Q'
                        },
                        new
                        {
                            Id = 18,
                            magicColorIdentity = 'R'
                        },
                        new
                        {
                            Id = 19,
                            magicColorIdentity = 'S'
                        },
                        new
                        {
                            Id = 20,
                            magicColorIdentity = 'T'
                        },
                        new
                        {
                            Id = 21,
                            magicColorIdentity = 'U'
                        },
                        new
                        {
                            Id = 22,
                            magicColorIdentity = 'V'
                        },
                        new
                        {
                            Id = 23,
                            magicColorIdentity = 'W'
                        },
                        new
                        {
                            Id = 24,
                            magicColorIdentity = 'X'
                        },
                        new
                        {
                            Id = 25,
                            magicColorIdentity = 'Y'
                        },
                        new
                        {
                            Id = 26,
                            magicColorIdentity = 'Z'
                        });
                });

            modelBuilder.Entity("PSCHD.Model.MagicGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("magicGame")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MagicGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            magicGame = "paper"
                        },
                        new
                        {
                            Id = 2,
                            magicGame = "arena"
                        },
                        new
                        {
                            Id = 3,
                            magicGame = "mtgo"
                        });
                });

            modelBuilder.Entity("PSCHD.Model.MagicKeyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keyword")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MagicKeyword");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Keyword = "Flying"
                        },
                        new
                        {
                            Id = 2,
                            Keyword = "Enchant"
                        },
                        new
                        {
                            Id = 3,
                            Keyword = "Cascade"
                        },
                        new
                        {
                            Id = 4,
                            Keyword = "Scavenge"
                        },
                        new
                        {
                            Id = 5,
                            Keyword = "Manifest"
                        },
                        new
                        {
                            Id = 6,
                            Keyword = "Trample"
                        },
                        new
                        {
                            Id = 7,
                            Keyword = "Partner"
                        },
                        new
                        {
                            Id = 8,
                            Keyword = "Aftermath"
                        },
                        new
                        {
                            Id = 9,
                            Keyword = "Equip"
                        },
                        new
                        {
                            Id = 10,
                            Keyword = "Flanking"
                        },
                        new
                        {
                            Id = 11,
                            Keyword = "Defender"
                        },
                        new
                        {
                            Id = 12,
                            Keyword = "Scry"
                        },
                        new
                        {
                            Id = 13,
                            Keyword = "Flashback"
                        },
                        new
                        {
                            Id = 14,
                            Keyword = "Reach"
                        },
                        new
                        {
                            Id = 15,
                            Keyword = "Lifelink"
                        },
                        new
                        {
                            Id = 16,
                            Keyword = "First strike"
                        },
                        new
                        {
                            Id = 17,
                            Keyword = "Vigilance"
                        },
                        new
                        {
                            Id = 18,
                            Keyword = "Transform"
                        },
                        new
                        {
                            Id = 19,
                            Keyword = "Kicker"
                        },
                        new
                        {
                            Id = 20,
                            Keyword = "Menace"
                        },
                        new
                        {
                            Id = 21,
                            Keyword = "Heroic"
                        },
                        new
                        {
                            Id = 22,
                            Keyword = "Persist"
                        },
                        new
                        {
                            Id = 23,
                            Keyword = "Ascend"
                        },
                        new
                        {
                            Id = 24,
                            Keyword = "Parley"
                        },
                        new
                        {
                            Id = 25,
                            Keyword = "Mill"
                        },
                        new
                        {
                            Id = 26,
                            Keyword = "Imprint"
                        },
                        new
                        {
                            Id = 27,
                            Keyword = "Hexproof"
                        },
                        new
                        {
                            Id = 28,
                            Keyword = "Convoke"
                        },
                        new
                        {
                            Id = 29,
                            Keyword = "Surveil"
                        },
                        new
                        {
                            Id = 30,
                            Keyword = "Mutate"
                        },
                        new
                        {
                            Id = 31,
                            Keyword = "Hellbent"
                        },
                        new
                        {
                            Id = 32,
                            Keyword = "Haste"
                        },
                        new
                        {
                            Id = 33,
                            Keyword = "Landcycling"
                        },
                        new
                        {
                            Id = 34,
                            Keyword = "Buyback"
                        },
                        new
                        {
                            Id = 35,
                            Keyword = "Ward"
                        },
                        new
                        {
                            Id = 36,
                            Keyword = "Threshold"
                        },
                        new
                        {
                            Id = 37,
                            Keyword = "Foretell"
                        },
                        new
                        {
                            Id = 38,
                            Keyword = "Fuse"
                        },
                        new
                        {
                            Id = 39,
                            Keyword = "Cumulative upkeep"
                        },
                        new
                        {
                            Id = 40,
                            Keyword = "Deathtouch"
                        },
                        new
                        {
                            Id = 41,
                            Keyword = "Flash"
                        },
                        new
                        {
                            Id = 42,
                            Keyword = "Explore"
                        },
                        new
                        {
                            Id = 43,
                            Keyword = "Suspend"
                        },
                        new
                        {
                            Id = 44,
                            Keyword = "Exploit"
                        },
                        new
                        {
                            Id = 45,
                            Keyword = "Megamorph"
                        },
                        new
                        {
                            Id = 46,
                            Keyword = "Ferocious"
                        },
                        new
                        {
                            Id = 47,
                            Keyword = "Basic landcycling"
                        },
                        new
                        {
                            Id = 48,
                            Keyword = "Fight"
                        },
                        new
                        {
                            Id = 49,
                            Keyword = "Double strike"
                        },
                        new
                        {
                            Id = 50,
                            Keyword = "Infect"
                        },
                        new
                        {
                            Id = 51,
                            Keyword = "Channel"
                        },
                        new
                        {
                            Id = 52,
                            Keyword = "Bestow"
                        },
                        new
                        {
                            Id = 53,
                            Keyword = "Devoid"
                        },
                        new
                        {
                            Id = 54,
                            Keyword = "Protection"
                        },
                        new
                        {
                            Id = 55,
                            Keyword = "Typecycling"
                        },
                        new
                        {
                            Id = 56,
                            Keyword = "Split second"
                        });
                });

            modelBuilder.Entity("PSCHD.Model.MultiverseId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("multiVerseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MagicCardId");

                    b.ToTable("MultiverseIds");
                });

            modelBuilder.Entity("PSCHD.Model.Prices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FinishId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("currency")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("datetime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FinishId");

                    b.HasIndex("MagicCardId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("PSCHD.Model.RelatedUris", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("URI")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MagicCardId");

                    b.ToTable("RelatedUris");
                });

            modelBuilder.Entity("PSCHD.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PSCHD.Model.UserMagicCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCardId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MagicCollectionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MagicCardId");

                    b.HasIndex("MagicCollectionId");

                    b.ToTable("UserMagicCards");
                });

            modelBuilder.Entity("PSCHD.Model.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SettingId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vlue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("PSCHD.Model.ArtistId", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", null)
                        .WithMany("artist_ids")
                        .HasForeignKey("MagicCardId");
                });

            modelBuilder.Entity("PSCHD.Model.Finish", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", null)
                        .WithMany("finishes")
                        .HasForeignKey("MagicCardId");
                });

            modelBuilder.Entity("PSCHD.Model.ImageUris", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", "Parent")
                        .WithMany("image_uris")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCard", b =>
                {
                    b.HasOne("PSCHD.Model.Legalities", "legalities")
                        .WithMany()
                        .HasForeignKey("legalitiesId");

                    b.Navigation("legalities");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCardColor", b =>
                {
                    b.HasOne("PSCHD.Model.MagicColor", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("PSCHD.Model.MagicCard", "MagicCard")
                        .WithMany("colors")
                        .HasForeignKey("MagicCardId");

                    b.Navigation("Color");

                    b.Navigation("MagicCard");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCardColorIdentity", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", "MagicCard")
                        .WithMany("color_identity")
                        .HasForeignKey("MagicCardId");

                    b.HasOne("PSCHD.Model.MagicColorIdentity", "MagicColorIdentity")
                        .WithMany()
                        .HasForeignKey("MagicColorIdentityId");

                    b.Navigation("MagicCard");

                    b.Navigation("MagicColorIdentity");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCardGame", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", "MagicCard")
                        .WithMany("games")
                        .HasForeignKey("MagicCardId");

                    b.HasOne("PSCHD.Model.MagicGame", "MagicGame")
                        .WithMany()
                        .HasForeignKey("MagicGameId");

                    b.Navigation("MagicCard");

                    b.Navigation("MagicGame");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCardKeyword", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", "MagicCard")
                        .WithMany("keywords")
                        .HasForeignKey("MagicCardId");

                    b.HasOne("PSCHD.Model.MagicKeyword", "keyword")
                        .WithMany()
                        .HasForeignKey("keywordId");

                    b.Navigation("MagicCard");

                    b.Navigation("keyword");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCollection", b =>
                {
                    b.HasOne("PSCHD.Model.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PSCHD.Model.MultiverseId", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", "MagicCard")
                        .WithMany("multiverse_ids")
                        .HasForeignKey("MagicCardId");

                    b.Navigation("MagicCard");
                });

            modelBuilder.Entity("PSCHD.Model.Prices", b =>
                {
                    b.HasOne("PSCHD.Model.Finish", "Finish")
                        .WithMany()
                        .HasForeignKey("FinishId");

                    b.HasOne("PSCHD.Model.MagicCard", "MagicCard")
                        .WithMany("prices")
                        .HasForeignKey("MagicCardId");

                    b.Navigation("Finish");

                    b.Navigation("MagicCard");
                });

            modelBuilder.Entity("PSCHD.Model.RelatedUris", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", "MagicCard")
                        .WithMany("related_uris")
                        .HasForeignKey("MagicCardId");

                    b.Navigation("MagicCard");
                });

            modelBuilder.Entity("PSCHD.Model.UserMagicCard", b =>
                {
                    b.HasOne("PSCHD.Model.MagicCard", "MagicCard")
                        .WithMany()
                        .HasForeignKey("MagicCardId");

                    b.HasOne("PSCHD.Model.MagicCollection", null)
                        .WithMany("UserMagicCards")
                        .HasForeignKey("MagicCollectionId");

                    b.Navigation("MagicCard");
                });

            modelBuilder.Entity("PSCHD.Model.UserSetting", b =>
                {
                    b.HasOne("PSCHD.Model.UserSetting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingId");

                    b.HasOne("PSCHD.Model.User", "User")
                        .WithMany("Settings")
                        .HasForeignKey("UserId");

                    b.Navigation("Setting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCard", b =>
                {
                    b.Navigation("artist_ids");

                    b.Navigation("color_identity");

                    b.Navigation("colors");

                    b.Navigation("finishes");

                    b.Navigation("games");

                    b.Navigation("image_uris");

                    b.Navigation("keywords");

                    b.Navigation("multiverse_ids");

                    b.Navigation("prices");

                    b.Navigation("related_uris");
                });

            modelBuilder.Entity("PSCHD.Model.MagicCollection", b =>
                {
                    b.Navigation("UserMagicCards");
                });

            modelBuilder.Entity("PSCHD.Model.User", b =>
                {
                    b.Navigation("Collections");

                    b.Navigation("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
